"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[8142],{78142:function(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__){__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{protobuf:function(){return protobuf}});var keywordArray=["package","message","import","syntax","required","optional","repeated","reserved","default","extensions","packed","bool","bytes","double","enum","float","string","int32","int64","uint32","uint64","sint32","sint64","fixed32","fixed64","sfixed32","sfixed64","option","service","rpc","returns"],keywords=RegExp("^(("+keywordArray.join(")|(")+"))\\b","i"),identifiers=RegExp("^[_A-Za-z\xa1-￿][_A-Za-z0-9\xa1-￿]*");let protobuf={name:"protobuf",token:function(stream){return stream.eatSpace()?null:stream.match("//")?(stream.skipToEnd(),"comment"):stream.match(/^[0-9\.+-]/,!1)&&(stream.match(/^[+-]?0x[0-9a-fA-F]+/)||stream.match(/^[+-]?\d*\.\d+([EeDd][+-]?\d+)?/)||stream.match(/^[+-]?\d+([EeDd][+-]?\d+)?/))?"number":stream.match(/^"([^"]|(""))*"/)||stream.match(/^'([^']|(''))*'/)?"string":stream.match(keywords)?"keyword":stream.match(identifiers)?"variable":(stream.next(),null)},languageData:{autocomplete:keywordArray}}}}]);
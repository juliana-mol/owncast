"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[7525],{87525:function(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__){function wordObj(words){for(var o={},i=0,e=words.length;i<e;++i)o[words[i]]=!0;return o}__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{eiffel:function(){return eiffel}});var keywords=wordObj(["note","across","when","variant","until","unique","undefine","then","strip","select","retry","rescue","require","rename","reference","redefine","prefix","once","old","obsolete","loop","local","like","is","inspect","infix","include","if","frozen","from","external","export","ensure","end","elseif","else","do","creation","create","check","alias","agent","separate","invariant","inherit","indexing","feature","expanded","deferred","class","Void","True","Result","Precursor","False","Current","create","attached","detachable","as","and","implies","not","or"]),operators=wordObj([":=","and then","and","or","<<",">>"]);function tokenBase(stream,state){if(stream.eatSpace())return null;var newtok,ch=stream.next();return'"'==ch||"'"==ch?(newtok=function(stream,state){for(var ch1,escaped=!1;null!=(ch1=stream.next());){if(ch1==ch&&!escaped){state.tokenize.pop();break}escaped=!escaped&&"%"==ch1}return"string"},state.tokenize.push(newtok),newtok(stream,state)):"-"==ch&&stream.eat("-")?(stream.skipToEnd(),"comment"):":"==ch&&stream.eat("=")?"operator":/[0-9]/.test(ch)?(stream.eatWhile(/[xXbBCc0-9\.]/),stream.eat(/[\?\!]/),"variable"):/[a-zA-Z_0-9]/.test(ch)?(stream.eatWhile(/[a-zA-Z_0-9]/),stream.eat(/[\?\!]/),"variable"):/[=+\-\/*^%<>~]/.test(ch)?(stream.eatWhile(/[=+\-\/*^%<>~]/),"operator"):null}let eiffel={name:"eiffel",startState:function(){return{tokenize:[tokenBase]}},token:function(stream,state){var style=state.tokenize[state.tokenize.length-1](stream,state);if("variable"==style){var word=stream.current();style=keywords.propertyIsEnumerable(stream.current())?"keyword":operators.propertyIsEnumerable(stream.current())?"operator":/^[A-Z][A-Z_0-9]*$/g.test(word)?"tag":/^0[bB][0-1]+$/g.test(word)?"number":/^0[cC][0-7]+$/g.test(word)?"number":/^0[xX][a-fA-F0-9]+$/g.test(word)?"number":/^([0-9]+\.[0-9]*)|([0-9]*\.[0-9]+)$/g.test(word)?"number":/^[0-9]+$/g.test(word)?"number":"variable"}return style},languageData:{commentTokens:{line:"--"}}}}}]);